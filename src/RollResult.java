/** A class used to represent an outcome of a roll, returned by RollInterpreter
 *
 * @author Hans de los Santos
 */
public class RollResult {
    /** Whether the outcome is an instant win (rolled triples or four-five-six) */
    private boolean win;

    /** Whether the outcome is an instant loss (rolled one-two-three) */
    private boolean lose;

    /** The outcome of the roll represented in a String (triples, four-five-six, one-two-three, doubles, or unmatched) */
    private String condition;

    /** The score generated by the roll. If no score is generated, default -1 */
    private int score;

    /**
     * Instantiates a RollResult object with a score
     *
     * @param win Instant win?
     * @param lose Instant lose?
     * @param condition The outcome of the roll
     * @param score The score generated
     */
    public RollResult(boolean win, boolean lose, String condition, int score) {
        this.win = win;
        this.lose = lose;
        this.condition = condition;
        this.score = score;
    }

    /**
     * Instantiates a RollResult object with no score
     *
     * @param win Instant win?
     * @param lose Instant lose?
     * @param condition The outcome of the roll
     */
    public RollResult(boolean win, boolean lose, String condition) {
        this.win = win;
        this.lose = lose;
        this.condition = condition;
        this.score = -1;
    }

    /**
     * Returns if the roll resulted in an instant win
     *
     * @return Whether the roll resulted in an instant win
     */
    public boolean isWin() {
        return win;
    }

    /**
     * Returns if the roll resulted in an instant loss
     *
     * @return Whether the roll resulted in an instant loss
     */
    public boolean isLose() {
        return lose;
    }

    /**
     * Returns the outcome of the roll represented in a String (triples, four-five-six, one-two-three, doubles, or unmatched)
     *
     * @return The outcome of the roll
     */
    public String getCondition() {
        return condition;
    }

    /**
     * Returns the score generated by the roll, if any
     *
     * @return The score generated by the roll, otherwise return -1
     */
    public int getScore() {
        return score;
    }

    /**
     * Returns a String detailing the RollResult instance and all of its instance variables. For de-bugging.
     *
     * @return a string representation of the RollResult instance
     */
    public String toString() {
        return "win? " + win +
                "\nlose? " + lose +
                "\ncondition? " + condition +
                "\nscore? " + score;
    }
}
